include:
  - local: /pipelines/common.gitlab-ci.yml

stages:
  - code_quality
  - build
  - image_scan
  - release
  - deploy
  - rollback

variables:
  IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"
  IMAGE_BACKEND: "ghcr.io/gungindi/karsajobs-backend:${IMAGE_TAG}"

lint:
  stage: code_quality
  image: golang:1.15-alpine
  script:
    - go fmt ./...
    - go vet ./...
  allow_failure: true

test: 
  stage: code_quality
  image: golang:1.15-alpine
  script:
    - go test ./... -v
  allow_failure: true

build_backend:
  extends: .dind
  stage: build
  needs:
    - test  
    - lint
  script:
    - docker build -t "$IMAGE_BACKEND" ./karsajobs-be

trivy_scan:
  extends: .dind
  stage: image_scan
  needs:
    - build_backend
  script:
    - docker run --rm aquasec/trivy:0.43.0 image --severity "MEDIUM,HIGH,CRITICAL" "$IMAGE_BACKEND"  | tee trivy-be-report.txt 
  artifacts:
    reports:
      sast: trivy-be-report.txt
    paths:
      - trivy-be-report.txt
    expire_in: 1 week
  allow_failure: true

release_backend:
  extends: .dind
  before_script:
    - echo "$REGISTRY_PASSWORD" | docker login ghcr.io -u "$REGISTRY_USER" --password-stdin
  stage: release
  needs:
    - trivy_scan  
  script:
    - docker push "$IMAGE_BACKEND"
  when: manual
  allow_failure: false

deploy_backend:
  stage: deploy
  extends: .deploy-app
  needs: 
    - release_backend
  variables:
    FOLDER: "backend"
    DEPLOYMENT: "karsajobs-backend"
    CONTAINER_NAME: karsa-be
    IMAGE: "$IMAGE_BACKEND"

rollback_backend:
  stage: rollback
  extends: .rollout-k8s
  needs: 
    - deploy_backend
  variables:
    K8S_OBJECT: "deployment"
    OBJECT_NAME: "karsajobs-backend"
    NAMESPACE: "karsajobs"